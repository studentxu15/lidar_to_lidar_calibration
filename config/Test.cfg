#!/usr/bin/env python3

PACKAGE = "lidar_to_lidar_calibration"

from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()
gen.add("calib_x", double_t, 0, "Calibration offset in X direction", 0.01, -10.0, 10.0)
gen.add("calib_y", double_t, 0, "Calibration offset in Y direction", 0.01, -10.0, 10.0)
gen.add("calib_z", double_t, 0, "Calibration offset in Z direction", 0.01, -10.0, 10.0)
gen.add("calib_roll", double_t, 0, "Calibration offset in roll", 0.01, -180.0, 180.0)
gen.add("calib_pitch", double_t, 0, "Calibration offset in pitch", 0.01, -180.0, 180.0)
gen.add("calib_yaw", double_t, 0, "Calibration offset in yaw", 0.01, -180.0, 180.0)
gen.add("add_x", double_t, 0, "Add X offset to lidar", 0.0, -10.0, 10.0)
gen.add("add_y", double_t, 0, "Add Y offset to lidar", 0.0, -10.0, 10.0)
gen.add("add_z", double_t, 0, "Add Z offset to lidar", 0.0, -10.0, 10.0)
gen.add("add_roll", double_t, 0, "Add roll offset to lidar", 0.0, -180.0, 180.0)
gen.add("add_pitch", double_t, 0, "Add pitch offset to lidar", 0.0, -180.0, 180.0)
gen.add("add_yaw", double_t, 0, "Add yaw offset to lidar", 0.0, -180.0, 180.0)
gen.add("icp_score_threshold", double_t, 0, "icp_score_threshold", 0.0, 0.0, 1.0)
gen.add("trigger_calculation", bool_t, 0, "Trigger calculation", False)
exit(gen.generate(PACKAGE, PACKAGE, "Test"))
